import { PrismaClient } from '@prisma/client'
import pgvector from 'pgvector/utils'
import axios from 'axios'
const prisma = new PrismaClient()
async function embedMovie (page: Number) {
    try {
        const data = await axios.post(`http://127.0.0.1:5000/gettv`, {
            "number": page
        })
        const resbody = data.data.result
        for (const data of resbody) {
            const id = data.id

            const embedding = pgvector.toSql(data.embedding)
            const existing = await prisma.tv.findFirst({
                where: {
                    id: data.id,
                },
            })
            if (existing) {
                await prisma.$executeRaw`INSERT INTO movie (id, embedding) VALUES (${data.id}, ${embedding}::vector) ON CONFLICT (id) DO UPDATE SET embedding = EXCLUDED.embedding`

                await prisma.movie.update({
                    where: {
                        id: id
                    },
                    data: {
                        genre_ids: { set: data.genre_ids },
                        original_language: data.original_language,
                        original_title: data.original_title,
                        overview: data.overview,
                        popularity: data.popularity,
                        poster_path: data.poster_path,
                        release_date: data.release_date,
                        title: data.title,
                        video: data.video,
                        vote_average: data.vote_average,
                        vote_count: data.vote_count,
                        id: data.id,
                    }
                })
            } else {
                await prisma.$executeRaw`INSERT INTO movie (id, embedding) VALUES (${data.id}, ${embedding}::vector)`
                await prisma.movie.update({
                    where: {
                        id: id
                    },
                    data: {
                        genre_ids: { set: data.genre_ids },
                        original_language: data.original_language,
                        original_title: data.original_title,
                        overview: data.overview,
                        popularity: data.popularity,
                        poster_path: data.poster_path,
                        release_date: data.release_date,
                        title: data.title,
                        video: data.video,
                        vote_average: data.vote_average,
                        vote_count: data.vote_count,
                        id: data.id,
                    }
                })
            }
        }
        return
    } catch (error) {
        console.log(error)
    }



}
async function embedTv (page: Number) {
    try {
        const data = await axios.post(`http://127.0.0.1:5000/gettv`, {
            "number": page
        })
        const resbody = data.data.result
        for (const data of resbody) {
            const id = data.id

            const embedding = pgvector.toSql(data.embedding)
            const existing = await prisma.tv.findFirst({
                where: {
                    id: data.id,
                },
            })
            if (existing) {
                await prisma.$executeRaw`INSERT INTO tv (id, embedding) VALUES (${data.id}, ${embedding}::vector) ON CONFLICT (id) DO UPDATE SET embedding = EXCLUDED.embedding`

                await prisma.tv.update({
                    where: {
                        id: id
                    },
                    data: {
                        first_air_date: data.first_air_date,
                        genre_ids: { set: data.genre_ids },
                        name: data.name,
                        origin_country: { set: data.origin_country },
                        original_language: data.original_language,
                        original_name: data.original_name,
                        overview: data.overview,
                        popularity: data.popularity,
                        poster_path: data.poster_path,
                        vote_average: data.vote_average,
                        vote_count: data.vote_count,
                        id: data.id,
                    }
                })
            } else {
                await prisma.$executeRaw`INSERT INTO tv (id, embedding) VALUES (${data.id}, ${embedding}::vector)`
                await prisma.tv.update({
                    where: {
                        id: id
                    },
                    data: {
                        first_air_date: data.first_air_date,
                        genre_ids: { set: data.genre_ids },
                        name: data.name,
                        origin_country: { set: data.origin_country },
                        original_language: data.original_language,
                        original_name: data.original_name,
                        overview: data.overview,
                        popularity: data.popularity,
                        poster_path: data.poster_path,
                        vote_average: data.vote_average,
                        vote_count: data.vote_count,
                        id: data.id,
                    }
                })
            }
        } return
    } catch (error) {
        console.log(error)
    }


}

async function getclosestmoviebyembedding (rawembedding: any) {
    const result = []
    let items: any
    const embedding = pgvector.toSql(rawembedding)
    items = await prisma.$queryRaw`SELECT id, embedding::text FROM movie ORDER BY embedding <-> ${embedding}::vector LIMIT 5`
    for (const item of items) {
        const closestdata = await prisma.movie.findFirst({
            where: {
                id: item.id
            },
        })
        result.push(closestdata)
    }
    return result
}

async function getclosesttvbyembedding (rawembedding: any) {
    const result = []
    let items: any
    const embedding = pgvector.toSql(rawembedding)
    items = await prisma.$queryRaw`SELECT id, embedding::text FROM tv ORDER BY embedding <-> ${embedding}::vector LIMIT 5`
    for (const item of items) {
        const closestdata = await prisma.tv.findFirst({
            where: {
                id: item.id
            },
        })
        result.push(closestdata)
    }

    return result
}

async function main () {
    const data = await getclosestmoviebyembedding([
        -0.0494927354156971,
        0.04604118689894676,
        -0.04186286777257919,
        -0.05347413197159767,
        -0.06104226037859917,
        -0.005090486723929644,
        0.01485476829111576,
        0.05077631026506424,
        0.01595187373459339,
        -0.039250586181879044,
        0.05745433270931244,
        -0.07671397924423218,
        0.04361490160226822,
        -0.0008553085499443114,
        0.011235007084906101,
        -0.13556930422782898,
        -0.007272088900208473,
        0.05540918558835983,
        -0.019988317042589188,
        0.04496244341135025,
        0.03006867505609989,
        0.048844292759895325,
        -0.01731623150408268,
        -0.04680900648236275,
        0.03730246052145958,
        -0.0005819911020807922,
        0.027605194598436356,
        -0.01837504841387272,
        0.010928981937468052,
        -0.003511725226417184,
        0.006856037303805351,
        -0.06400062143802643,
        -0.021443594247102737,
        0.0035562042612582445,
        0.04955882579088211,
        0.012453465722501278,
        -0.04536880552768707,
        0.030465230345726013,
        0.024117525666952133,
        -0.02748558297753334,
        -0.02387484535574913,
        0.046803731471300125,
        -0.019896261394023895,
        0.07829532027244568,
        -0.09430234134197235,
        -0.043313898146152496,
        -0.0400986447930336,
        0.05952270328998566,
        0.024723393842577934,
        0.004615680780261755,
        -0.05368676036596298,
        0.0122591657564044,
        0.02390206977725029,
        0.0276574045419693,
        -0.11927696317434311,
        -0.05600099638104439,
        0.026922155171632767,
        0.025897735729813576,
        0.03517759591341019,
        -0.059531472623348236,
        -0.03682563453912735,
        0.08753849565982819,
        0.036500994116067886,
        0.05678487569093704,
        -0.07259903848171234,
        0.004657934419810772,
        0.03443218767642975,
        -0.004795324523001909,
        -0.08853456377983093,
        0.018428117036819458,
        -0.027342798188328743,
        -0.02545706368982792,
        0.03716215491294861,
        -0.011782689951360226,
        -0.03450386971235275,
        0.040379785001277924,
        -0.021168500185012817,
        -0.08111924678087234,
        0.04664497822523117,
        -0.07444669306278229,
        0.050253976136446,
        0.0292824637144804,
        -0.09723501652479172,
        0.07872641831636429,
        -0.01414779108017683,
        0.03924165293574333,
        0.06954952329397202,
        -0.032280221581459045,
        0.08521078526973724,
        -0.01427933294326067,
        -0.0011152203660458326,
        -0.009182480163872242,
        0.004780585877597332,
        -0.024573449045419693,
        -0.036082059144973755,
        0.052042096853256226,
        0.015246601775288582,
        0.04174310341477394,
        -0.05915604531764984,
        0.020429836586117744,
        -0.005636491812765598,
        0.005568787921220064,
        -0.05058617889881134,
        0.03249044716358185,
        -0.033455412834882736,
        0.013042044825851917,
        -0.010989458300173283,
        -0.01833779364824295,
        -0.08208312094211578,
        -0.07626418024301529,
        -0.04095657914876938,
        -0.023547790944576263,
        0.027025355026125908,
        -0.1451847106218338,
        0.06703773140907288,
        0.11100918054580688,
        0.0514732226729393,
        0.05938773229718208,
        -0.21141205728054047,
        -0.10118816047906876,
        0.011964411474764347,
        -0.05203425511717796,
        -0.0777168795466423,
        -0.02050785906612873,
        0.001880126423202455,
        -0.05747237056493759,
        0.021533159539103508,
        5.472581173836347e-33,
        -0.055470749735832214,
        -0.04694747552275658,
        0.003939332440495491,
        0.03348856791853905,
        -0.03860954940319061,
        -0.021174993366003036,
        -0.03476191684603691,
        0.033136241137981415,
        -0.04638979583978653,
        0.005653977394104004,
        -0.038039445877075195,
        -0.0866076648235321,
        -0.04418887943029404,
        0.01767710968852043,
        -0.06314441561698914,
        0.02414904162287712,
        -0.01394967082887888,
        -0.009448552504181862,
        0.02905171364545822,
        -0.04719376936554909,
        0.043953727930784225,
        0.08789295703172684,
        0.08082563430070877,
        -0.0018904180033132434,
        -0.012890222482383251,
        0.014479278586804867,
        0.07508806139230728,
        -0.0006179027259349823,
        0.04755748435854912,
        0.04010837897658348,
        -0.06393527239561081,
        -0.05178232118487358,
        0.021626515313982964,
        -0.010618968866765499,
        0.07123391330242157,
        0.06923725455999374,
        -0.06077636405825615,
        -0.053714532405138016,
        0.0071772076189517975,
        -0.054134730249643326,
        -0.04679122194647789,
        0.16489550471305847,
        -0.010220690630376339,
        -0.045411303639411926,
        -0.07128707319498062,
        -0.015542594715952873,
        0.015160690993070602,
        -0.0034316834062337875,
        0.017147105187177658,
        0.02241210825741291,
        -0.02175336517393589,
        0.01903912052512169,
        0.07003903388977051,
        -0.05754844471812248,
        0.026177095249295235,
        -0.008462490513920784,
        0.034541334956884384,
        0.054948341101408005,
        -0.0481603778898716,
        0.001561943907290697,
        0.03674603998661041,
        0.011298011057078838,
        0.015026511624455452,
        0.03223554417490959,
        -0.01132174488157034,
        -0.01719258539378643,
        -0.06241960451006889,
        -0.01574942283332348,
        0.025646688416600227,
        -0.018977489322423935,
        -0.059546977281570435,
        0.0725414976477623,
        -0.09532240033149719,
        -0.00944595132023096,
        -0.022487811744213104,
        0.004811282269656658,
        0.014937777072191238,
        -0.08088771253824234,
        -0.10542033612728119,
        -0.04898074269294739,
        -0.14322994649410248,
        -0.007762995548546314,
        0.009089155122637749,
        0.021701181307435036,
        0.0585833340883255,
        -0.018366921693086624,
        0.0022824208717793226,
        -0.025669652968645096,
        -0.00482452055439353,
        0.018775127828121185,
        0.04681013524532318,
        -0.0037364966701716185,
        0.06242397800087929,
        0.0030074543319642544,
        -0.060949694365262985,
        -5.7066092421156025e-33,
        -0.025756947696208954,
        -0.0232837051153183,
        -0.014606038108468056,
        0.005819558631628752,
        0.02453460916876793,
        0.04123566672205925,
        -0.11033859848976135,
        0.0505698099732399,
        -0.0526554100215435,
        -0.06106685847043991,
        -0.08944929391145706,
        0.07713441550731659,
        0.024194756522774696,
        0.004044769331812859,
        -0.01925140805542469,
        0.06312048435211182,
        0.15197598934173584,
        -0.03621750697493553,
        -0.08087210357189178,
        0.039384275674819946,
        -0.00709702679887414,
        0.05609554424881935,
        -0.04406949505209923,
        -0.06148621439933777,
        0.03481613099575043,
        0.030674606561660767,
        0.06462763249874115,
        0.01904076337814331,
        -0.05114392936229706,
        0.036319345235824585,
        0.06799159198999405,
        0.003948416095227003,
        -0.0706256702542305,
        0.03506605327129364,
        0.08909500390291214,
        0.06485581398010254,
        0.07206038385629654,
        0.016451500356197357,
        0.023302936926484108,
        0.018716678023338318,
        -0.01698226109147072,
        -0.021755361929535866,
        0.007772588171064854,
        0.035311486572027206,
        -0.024251285940408707,
        -0.031076623126864433,
        -0.007500512525439262,
        0.02951303869485855,
        -0.032282646745443344,
        0.03746851161122322,
        -0.05744117870926857,
        0.03380110114812851,
        0.027570383623242378,
        0.02543480508029461,
        0.04513520747423172,
        -0.0021882210858166218,
        -0.034612637013196945,
        0.0599396675825119,
        0.024689124897122383,
        -0.03132673725485802,
        -0.010684330947697163,
        0.020989632233977318,
        -0.006168278865516186,
        0.016386158764362335,
        -0.012902209535241127,
        0.0024029118940234184,
        -0.0340895839035511,
        0.004260225687175989,
        0.0025133690796792507,
        -0.047585222870111465,
        0.044730741530656815,
        -0.040681276470422745,
        -0.12191527336835861,
        0.04222450032830238,
        0.025400301441550255,
        -0.0126034552231431,
        -0.009950073435902596,
        -0.05324868485331535,
        -0.026407649740576744,
        0.021237118169665337,
        0.03100755624473095,
        -0.04226360470056534,
        -0.03547164797782898,
        0.015286460518836975,
        0.024606578052043915,
        0.07131180167198181,
        -0.04968938231468201,
        0.021851617842912674,
        0.057756420224905014,
        -0.02145121991634369,
        0.03812459483742714,
        -0.07898882776498795,
        0.09144037216901779,
        -0.036012597382068634,
        0.07994983345270157,
        -3.38278951517168e-08,
        -0.04701409116387367,
        -0.008845080621540546,
        0.019561609253287315,
        0.0297627542167902,
        -0.03855212405323982,
        -0.008432215079665184,
        -0.05762379243969917,
        0.008755166083574295,
        -0.00241453992202878,
        0.08764974027872086,
        0.06316032260656357,
        0.035155437886714935,
        0.041697025299072266,
        -0.02045762911438942,
        0.0101709496229887,
        0.09028380364179611,
        0.024594565853476524,
        0.03493247181177139,
        -0.04411913827061653,
        -0.03459947928786278,
        0.005008004140108824,
        -0.006709735840559006,
        -0.02722308784723282,
        -0.012801049277186394,
        -0.016023004427552223,
        0.04178163409233093,
        -0.048802316188812256,
        -0.09748482704162598,
        -0.011823488399386406,
        0.002671483438462019,
        0.13075512647628784,
        0.027046849951148033,
        -0.13371442258358002,
        -0.11704421043395996,
        0.0003505649510771036,
        0.11763869225978851,
        -0.08391067385673523,
        0.024318894371390343,
        0.0875946581363678,
        -0.012113971635699272,
        0.04827123507857323,
        0.10422679781913757,
        -0.005043367855250835,
        0.07025374472141266,
        -0.0005705786170437932,
        0.11061834543943405,
        0.07896988093852997,
        0.025500420480966568,
        -0.0029668963979929686,
        0.007592522539198399,
        -0.008048763498663902,
        0.007139876484870911,
        0.058935489505529404,
        -0.0018970584496855736,
        -0.01708640530705452,
        -0.058487046509981155,
        0.04155625402927399,
        0.1297585666179657,
        -0.03842670097947121,
        -0.05036765709519386,
        0.08016258478164673,
        0.05543651431798935,
        0.03470856696367264,
        -0.007192882243543863
    ])
    console.log(data)

    for (let i = 1; i < 101; i++) {

        let start = Date.now()
        await embedMovie(i)
        await embedTv(i)
        let end = Date.now()
        console.log(`done page: ${i} in ${((end - start) / 1000).toFixed(3)} seconds`)
    }
    const ddata = await getclosestmoviebyembedding([
        -0.0494927354156971,
        0.04604118689894676,
        -0.04186286777257919,
        -0.05347413197159767,
        -0.06104226037859917,
        -0.005090486723929644,
        0.01485476829111576,
        0.05077631026506424,
        0.01595187373459339,
        -0.039250586181879044,
        0.05745433270931244,
        -0.07671397924423218,
        0.04361490160226822,
        -0.0008553085499443114,
        0.011235007084906101,
        -0.13556930422782898,
        -0.007272088900208473,
        0.05540918558835983,
        -0.019988317042589188,
        0.04496244341135025,
        0.03006867505609989,
        0.048844292759895325,
        -0.01731623150408268,
        -0.04680900648236275,
        0.03730246052145958,
        -0.0005819911020807922,
        0.027605194598436356,
        -0.01837504841387272,
        0.010928981937468052,
        -0.003511725226417184,
        0.006856037303805351,
        -0.06400062143802643,
        -0.021443594247102737,
        0.0035562042612582445,
        0.04955882579088211,
        0.012453465722501278,
        -0.04536880552768707,
        0.030465230345726013,
        0.024117525666952133,
        -0.02748558297753334,
        -0.02387484535574913,
        0.046803731471300125,
        -0.019896261394023895,
        0.07829532027244568,
        -0.09430234134197235,
        -0.043313898146152496,
        -0.0400986447930336,
        0.05952270328998566,
        0.024723393842577934,
        0.004615680780261755,
        -0.05368676036596298,
        0.0122591657564044,
        0.02390206977725029,
        0.0276574045419693,
        -0.11927696317434311,
        -0.05600099638104439,
        0.026922155171632767,
        0.025897735729813576,
        0.03517759591341019,
        -0.059531472623348236,
        -0.03682563453912735,
        0.08753849565982819,
        0.036500994116067886,
        0.05678487569093704,
        -0.07259903848171234,
        0.004657934419810772,
        0.03443218767642975,
        -0.004795324523001909,
        -0.08853456377983093,
        0.018428117036819458,
        -0.027342798188328743,
        -0.02545706368982792,
        0.03716215491294861,
        -0.011782689951360226,
        -0.03450386971235275,
        0.040379785001277924,
        -0.021168500185012817,
        -0.08111924678087234,
        0.04664497822523117,
        -0.07444669306278229,
        0.050253976136446,
        0.0292824637144804,
        -0.09723501652479172,
        0.07872641831636429,
        -0.01414779108017683,
        0.03924165293574333,
        0.06954952329397202,
        -0.032280221581459045,
        0.08521078526973724,
        -0.01427933294326067,
        -0.0011152203660458326,
        -0.009182480163872242,
        0.004780585877597332,
        -0.024573449045419693,
        -0.036082059144973755,
        0.052042096853256226,
        0.015246601775288582,
        0.04174310341477394,
        -0.05915604531764984,
        0.020429836586117744,
        -0.005636491812765598,
        0.005568787921220064,
        -0.05058617889881134,
        0.03249044716358185,
        -0.033455412834882736,
        0.013042044825851917,
        -0.010989458300173283,
        -0.01833779364824295,
        -0.08208312094211578,
        -0.07626418024301529,
        -0.04095657914876938,
        -0.023547790944576263,
        0.027025355026125908,
        -0.1451847106218338,
        0.06703773140907288,
        0.11100918054580688,
        0.0514732226729393,
        0.05938773229718208,
        -0.21141205728054047,
        -0.10118816047906876,
        0.011964411474764347,
        -0.05203425511717796,
        -0.0777168795466423,
        -0.02050785906612873,
        0.001880126423202455,
        -0.05747237056493759,
        0.021533159539103508,
        5.472581173836347e-33,
        -0.055470749735832214,
        -0.04694747552275658,
        0.003939332440495491,
        0.03348856791853905,
        -0.03860954940319061,
        -0.021174993366003036,
        -0.03476191684603691,
        0.033136241137981415,
        -0.04638979583978653,
        0.005653977394104004,
        -0.038039445877075195,
        -0.0866076648235321,
        -0.04418887943029404,
        0.01767710968852043,
        -0.06314441561698914,
        0.02414904162287712,
        -0.01394967082887888,
        -0.009448552504181862,
        0.02905171364545822,
        -0.04719376936554909,
        0.043953727930784225,
        0.08789295703172684,
        0.08082563430070877,
        -0.0018904180033132434,
        -0.012890222482383251,
        0.014479278586804867,
        0.07508806139230728,
        -0.0006179027259349823,
        0.04755748435854912,
        0.04010837897658348,
        -0.06393527239561081,
        -0.05178232118487358,
        0.021626515313982964,
        -0.010618968866765499,
        0.07123391330242157,
        0.06923725455999374,
        -0.06077636405825615,
        -0.053714532405138016,
        0.0071772076189517975,
        -0.054134730249643326,
        -0.04679122194647789,
        0.16489550471305847,
        -0.010220690630376339,
        -0.045411303639411926,
        -0.07128707319498062,
        -0.015542594715952873,
        0.015160690993070602,
        -0.0034316834062337875,
        0.017147105187177658,
        0.02241210825741291,
        -0.02175336517393589,
        0.01903912052512169,
        0.07003903388977051,
        -0.05754844471812248,
        0.026177095249295235,
        -0.008462490513920784,
        0.034541334956884384,
        0.054948341101408005,
        -0.0481603778898716,
        0.001561943907290697,
        0.03674603998661041,
        0.011298011057078838,
        0.015026511624455452,
        0.03223554417490959,
        -0.01132174488157034,
        -0.01719258539378643,
        -0.06241960451006889,
        -0.01574942283332348,
        0.025646688416600227,
        -0.018977489322423935,
        -0.059546977281570435,
        0.0725414976477623,
        -0.09532240033149719,
        -0.00944595132023096,
        -0.022487811744213104,
        0.004811282269656658,
        0.014937777072191238,
        -0.08088771253824234,
        -0.10542033612728119,
        -0.04898074269294739,
        -0.14322994649410248,
        -0.007762995548546314,
        0.009089155122637749,
        0.021701181307435036,
        0.0585833340883255,
        -0.018366921693086624,
        0.0022824208717793226,
        -0.025669652968645096,
        -0.00482452055439353,
        0.018775127828121185,
        0.04681013524532318,
        -0.0037364966701716185,
        0.06242397800087929,
        0.0030074543319642544,
        -0.060949694365262985,
        -5.7066092421156025e-33,
        -0.025756947696208954,
        -0.0232837051153183,
        -0.014606038108468056,
        0.005819558631628752,
        0.02453460916876793,
        0.04123566672205925,
        -0.11033859848976135,
        0.0505698099732399,
        -0.0526554100215435,
        -0.06106685847043991,
        -0.08944929391145706,
        0.07713441550731659,
        0.024194756522774696,
        0.004044769331812859,
        -0.01925140805542469,
        0.06312048435211182,
        0.15197598934173584,
        -0.03621750697493553,
        -0.08087210357189178,
        0.039384275674819946,
        -0.00709702679887414,
        0.05609554424881935,
        -0.04406949505209923,
        -0.06148621439933777,
        0.03481613099575043,
        0.030674606561660767,
        0.06462763249874115,
        0.01904076337814331,
        -0.05114392936229706,
        0.036319345235824585,
        0.06799159198999405,
        0.003948416095227003,
        -0.0706256702542305,
        0.03506605327129364,
        0.08909500390291214,
        0.06485581398010254,
        0.07206038385629654,
        0.016451500356197357,
        0.023302936926484108,
        0.018716678023338318,
        -0.01698226109147072,
        -0.021755361929535866,
        0.007772588171064854,
        0.035311486572027206,
        -0.024251285940408707,
        -0.031076623126864433,
        -0.007500512525439262,
        0.02951303869485855,
        -0.032282646745443344,
        0.03746851161122322,
        -0.05744117870926857,
        0.03380110114812851,
        0.027570383623242378,
        0.02543480508029461,
        0.04513520747423172,
        -0.0021882210858166218,
        -0.034612637013196945,
        0.0599396675825119,
        0.024689124897122383,
        -0.03132673725485802,
        -0.010684330947697163,
        0.020989632233977318,
        -0.006168278865516186,
        0.016386158764362335,
        -0.012902209535241127,
        0.0024029118940234184,
        -0.0340895839035511,
        0.004260225687175989,
        0.0025133690796792507,
        -0.047585222870111465,
        0.044730741530656815,
        -0.040681276470422745,
        -0.12191527336835861,
        0.04222450032830238,
        0.025400301441550255,
        -0.0126034552231431,
        -0.009950073435902596,
        -0.05324868485331535,
        -0.026407649740576744,
        0.021237118169665337,
        0.03100755624473095,
        -0.04226360470056534,
        -0.03547164797782898,
        0.015286460518836975,
        0.024606578052043915,
        0.07131180167198181,
        -0.04968938231468201,
        0.021851617842912674,
        0.057756420224905014,
        -0.02145121991634369,
        0.03812459483742714,
        -0.07898882776498795,
        0.09144037216901779,
        -0.036012597382068634,
        0.07994983345270157,
        -3.38278951517168e-08,
        -0.04701409116387367,
        -0.008845080621540546,
        0.019561609253287315,
        0.0297627542167902,
        -0.03855212405323982,
        -0.008432215079665184,
        -0.05762379243969917,
        0.008755166083574295,
        -0.00241453992202878,
        0.08764974027872086,
        0.06316032260656357,
        0.035155437886714935,
        0.041697025299072266,
        -0.02045762911438942,
        0.0101709496229887,
        0.09028380364179611,
        0.024594565853476524,
        0.03493247181177139,
        -0.04411913827061653,
        -0.03459947928786278,
        0.005008004140108824,
        -0.006709735840559006,
        -0.02722308784723282,
        -0.012801049277186394,
        -0.016023004427552223,
        0.04178163409233093,
        -0.048802316188812256,
        -0.09748482704162598,
        -0.011823488399386406,
        0.002671483438462019,
        0.13075512647628784,
        0.027046849951148033,
        -0.13371442258358002,
        -0.11704421043395996,
        0.0003505649510771036,
        0.11763869225978851,
        -0.08391067385673523,
        0.024318894371390343,
        0.0875946581363678,
        -0.012113971635699272,
        0.04827123507857323,
        0.10422679781913757,
        -0.005043367855250835,
        0.07025374472141266,
        -0.0005705786170437932,
        0.11061834543943405,
        0.07896988093852997,
        0.025500420480966568,
        -0.0029668963979929686,
        0.007592522539198399,
        -0.008048763498663902,
        0.007139876484870911,
        0.058935489505529404,
        -0.0018970584496855736,
        -0.01708640530705452,
        -0.058487046509981155,
        0.04155625402927399,
        0.1297585666179657,
        -0.03842670097947121,
        -0.05036765709519386,
        0.08016258478164673,
        0.05543651431798935,
        0.03470856696367264,
        -0.007192882243543863
    ])
    console.log(ddata)
}
main()